{"version":3,"sources":["script.js"],"names":["themeBtn","document","querySelector","addEventListener","userPreference","body","getAttribute","includes","setLightMode","setDarkMode","window","localStorage","setItem","loadUserPreference","getItem","loadPrefersColorScheme","matchMedia","matches","event","loadThemePreferences","classList","remove","add","inputForm","inputCheckbox","inputTextfield","checkInputText","value","todoComponent","addTodoData","setTimeout","checked","preventDefault","key","modal","modalOverlay","modalClose","querySelectorAll","modalForm","modalTextarea","saveUpdate","successMessage","forEach","element","textareaValue","todoData","todoId","openModal","todoText","concat","innerText","clearCompleted","filterAll","filterActive","filterCompleted","todoFunctions","createListComponents","listId","_this","this","ul","li","createElement","form","label","input","span","div","button","type","ariaLabel","append","appendChild","setAttribute","localName","completeItem","editItem","removeItem","markLiComplete","object","isCompleted","toggle","removeLi","_this2","idx","splice","updateLi","itemCount","_this3","length","_this4","completedTodo","pendingTodo","filter","push","slice","call","console","log","bind","markComplete"],"mappings":"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","file":"script.js","sourcesContent":["/*\r\nThe page is loaded with the theme based on the user's\r\nlast preference (stored in the local storage). This\r\nhave a higher precedence over the system \r\nprefers-color-scheme. In initial load, the default theme \r\nis the user's system preference.\r\n*/\r\nconst themeBtn = document.querySelector('#theme-btn');\r\n\r\nthemeBtn.addEventListener('click', () => {\r\n  const currentMode = document.body.getAttribute('class');\r\n  const userPreference = currentMode.includes('dark-theme') ? setLightMode() : setDarkMode();\r\n  window.localStorage.setItem('todoAppTheme', userPreference);\r\n});\r\n\r\nconst loadUserPreference = () => {\r\n  if(window.localStorage.getItem('todoAppTheme')){\r\n    const preferedTheme = window.localStorage.getItem('todoAppTheme');\r\n    preferedTheme=='dark-theme' ? setDarkMode() : setLightMode();\r\n    return true;\r\n  }else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst loadPrefersColorScheme = () => { \r\n  const darkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n  darkMode ? setDarkMode() : 'Application default: light mode';\r\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (event) => { \r\n    if(!loadUserPreference())\r\n      event.matches ? setDarkMode() : 'setLightMode()';\r\n  });\r\n};\r\n\r\nconst loadThemePreferences = function(){\r\n  return loadUserPreference() || loadPrefersColorScheme();\r\n};\r\n\r\nfunction setLightMode(){\r\n  document.body.classList = 'light-theme';\r\n  themeBtn.classList.remove('night');\r\n  return 'light-theme';\r\n}\r\n\r\nfunction setDarkMode(){\r\n  document.body.classList = 'dark-theme';\r\n  document.body.classList.add('dark-bg');\r\n  themeBtn.classList = 'night';\r\n  return 'dark-theme';\r\n}\r\n\r\nloadThemePreferences();\r\n\r\n/*\r\n  Selecting the input components and adding\r\n  event listeners to it.\r\n*/\r\n\r\nconst inputForm = document.querySelector('#input-form');\r\nconst inputCheckbox = document.querySelector('#input-checkbox');\r\nconst inputTextfield = document.querySelector('#input-textfield');\r\n\r\ninputForm.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n});\r\n\r\ninputCheckbox.addEventListener('click', () => {\r\n  checkInputText();\r\n});\r\n\r\ninputTextfield.addEventListener('keypress', (event) => {\r\n  if(event.key==='Enter'){\r\n    inputCheckbox.checked = true;\r\n    checkInputText();\r\n  }\r\n});\r\n\r\nfunction checkInputText(){\r\n  if(inputTextfield.value)\r\n    todoComponent.addTodoData(inputTextfield.value);\r\n  setTimeout(() => {\r\n    inputTextfield.value = '';\r\n    inputCheckbox.checked = false;\r\n  }, 200);\r\n}\r\n\r\n/*\r\n  Select the modal once, then the function\r\n  to edit will display this once the event 'click'\r\n  is provoked.\r\n*/\r\nconst modal = document.querySelector('.modal');\r\nconst modalOverlay = document.querySelector('.modal-overlay');\r\nconst modalClose = document.querySelectorAll('.modal-close');\r\nconst modalForm = document.querySelector('#modal-form');\r\nconst modalTextarea = document.querySelector('#text-area');\r\nconst saveUpdate = document.querySelector('#modal-save');\r\nconst successMessage = document.querySelector('#success-message');\r\n\r\nmodalForm.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n});\r\n\r\nmodalClose.forEach((element) => {\r\n  element.addEventListener('click', () => {\r\n    modal.classList.remove('modal__show');\r\n    modalOverlay.classList.remove('modal-overlay');\r\n  });\r\n});\r\n\r\nsaveUpdate.addEventListener('click', () => {\r\n  successMessage.classList.remove('changes-invalid');\r\n  const textareaValue = document.querySelector('#text-area').value;\r\n  todoComponent.todoData.forEach((element) => {\r\n    if(element.todoId==todoComponent.openModal){\r\n      if(textareaValue!=false){\r\n        element.todoText = textareaValue;\r\n        const div = document.querySelector(`#todo-ul .${todoComponent.openModal} div`);\r\n        div.innerText = textareaValue;\r\n        successMessage.innerText = 'Changes saved!';\r\n        successMessage.classList.add('changes-saved');\r\n        setTimeout(() => {\r\n          modal.classList.remove('modal__show');\r\n          modalOverlay.classList.remove('modal-overlay');\r\n        }, 500);\r\n      }else {\r\n        successMessage.innerText = 'Invalid input! Text field must not be empty..';\r\n        successMessage.classList.add('changes-invalid');\r\n      }\r\n    }\r\n  });\r\n});\r\n\r\n/*\r\n  Select filter options and add event listeners to each.\r\n  Call to a function stored in todoFunctions.\r\n*/\r\nconst clearCompleted = document.querySelectorAll('.filter__clear');\r\nconst filterAll = document.querySelector('#filter-all');\r\nconst filterActive = document.querySelector('#filter-active');\r\nconst filterCompleted = document.querySelector('#filter-completed');\r\n\r\nclearCompleted.forEach((element) => {\r\n  element.addEventListener('click', () => {\r\n    todoComponent.clearCompleted();\r\n  });\r\n});\r\n\r\nfilterAll.addEventListener('click', () => {\r\n  todoComponent.filterAll();\r\n  filterAll.classList.add('filter__options--active');\r\n  filterActive.classList.remove('filter__options--active');\r\n  filterCompleted.classList.remove('filter__options--active');\r\n});\r\n\r\nfilterActive.addEventListener('click', () => {\r\n  todoComponent.filterActive();\r\n  filterActive.classList.add('filter__options--active');\r\n  filterAll.classList.remove('filter__options--active');\r\n  filterCompleted.classList.remove('filter__options--active');\r\n});\r\n\r\nfilterCompleted.addEventListener('click', () => {\r\n  todoComponent.filterCompleted();\r\n  filterActive.classList.remove('filter__options--active');\r\n  filterAll.classList.remove('filter__options--active');\r\n  filterCompleted.classList.add('filter__options--active');\r\n});\r\n\r\n/*\r\n  Drag and drop the list items using SortableJS Library\r\n*/\r\n\r\n// const ul = document.querySelector('#todo-ul');\r\n// new Sortable(ul, {\r\n//   animation: 150,\r\n//   ghostClass: 'blue-background-class'\r\n// });\r\n\r\n/*\r\n  Created two objects, one that contains all the\r\n  functionality of the component (todoFunctions) and the second\r\n  object (todoComponent) contains the data of the component.\r\n  todoComponent will just borrow the functions from the \r\n  todoFunctions by applying Call and Bind.\r\n*/\r\nconst todoFunctions = {\r\n  createListComponents(todoText, listId){\r\n    const ul = document.querySelector('#todo-ul');\r\n    const li = document.createElement('li');\r\n    const form = document.createElement('form');\r\n    const label = document.createElement('label');\r\n    const input = document.createElement('input');\r\n    const span = document.createElement('span');\r\n    const div = document.createElement('div');\r\n    const button = document.createElement('button');\r\n\r\n    input.type = 'checkbox';\r\n    input.ariaLabel = 'checkbox-li';\r\n    label.append(input, span);\r\n    form.appendChild(label);\r\n\r\n    div.innerText = todoText;\r\n\r\n    li.classList.add(listId);\r\n    button.setAttribute('aria-label', 'delete-li');\r\n    li.append(form, div, button);\r\n    ul.appendChild(li);\r\n\r\n    const listen = [input, div, button];\r\n    listen.forEach((element) => {\r\n      element.addEventListener('click', () => {\r\n        if(element.localName==='input') this.completeItem(listId);\r\n        else if(element.localName==='div') this.editItem(listId);\r\n        else if(element.localName==='button') this.removeItem(listId);\r\n      });\r\n    });\r\n  },\r\n  markLiComplete(listId){\r\n    this.todoData.forEach((object) => {\r\n      if(object.todoId==listId){\r\n        object.isCompleted = object.isCompleted==true ? false: true;\r\n        const allListItem = document.querySelectorAll('#todo-ul li');\r\n        allListItem.forEach((element) => {\r\n          if(element.getAttribute('class', listId).includes(listId)){\r\n            element.classList.toggle('li-completed');\r\n            const div = document.querySelector(`#todo-ul .${listId} div`);\r\n            div.classList.toggle('disable-edit');\r\n          }\r\n        });\r\n      }\r\n    });\r\n  },\r\n  removeLi(listId){\r\n    const allListItem = document.querySelectorAll('#todo-ul li');\r\n    allListItem.forEach((element) => {\r\n      if(element.getAttribute('class', listId).includes(listId)){\r\n        element.remove();\r\n        this.todoData.forEach((object, idx) => {\r\n          if(listId==object.todoId)\r\n            this.todoData.splice(idx, 1);\r\n        });\r\n      }\r\n    });\r\n  },\r\n  updateLi(listId){\r\n    successMessage.classList.remove('changes-saved');\r\n    successMessage.classList.remove('changes-invalid');\r\n    modal.classList.toggle('modal__show');\r\n    modalOverlay.classList.toggle('modal-overlay__show');\r\n    this.openModal = listId;\r\n    this.todoData.forEach((element) => {\r\n      if(element.todoId===listId){\r\n        modalTextarea.value = element.todoText;\r\n      }\r\n    });\r\n  },\r\n  itemCount(){\r\n    const span = document.querySelectorAll('.item-count');\r\n    span.forEach((element) => {\r\n      element.innerText = `${this.todoData.length} items left`;\r\n    });\r\n  },\r\n  clearCompleted(){\r\n    const completedTodo = [];\r\n    const pendingTodo = this.todoData.filter((element) => {\r\n      if(!element.isCompleted){\r\n        return element;\r\n      }else{\r\n        completedTodo.push(element.todoId);\r\n      }\r\n    });\r\n    this.todoData = pendingTodo.slice();\r\n    completedTodo.forEach((element) => {\r\n      this.removeItem(element);\r\n    });\r\n  },\r\n  filterAll(){\r\n    const listItems = document.querySelectorAll('#todo-ul li');\r\n    listItems.forEach((element) => {\r\n      element.classList.remove('hide-li');\r\n    });\r\n  },\r\n  filterActive(){\r\n    const listItems = document.querySelectorAll('#todo-ul li');\r\n    listItems.forEach((element) => {\r\n      if(element.getAttribute('class').includes('li-completed')){\r\n        element.classList.add('hide-li');\r\n      }else{\r\n        element.classList.remove('hide-li');\r\n      }\r\n    });\r\n  },\r\n  filterCompleted(){\r\n    const listItems = document.querySelectorAll('#todo-ul li');\r\n    listItems.forEach((element) => {\r\n      if(!element.getAttribute('class').includes('li-completed')){\r\n        element.classList.add('hide-li');\r\n      }else{\r\n        element.classList.remove('hide-li');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst todoComponent = {\r\n  todoId: 1,\r\n  todoData: [],\r\n  todoFunctions,\r\n  addTodoData(todoText){\r\n    const {todoId, todoData} = this;\r\n    const listId = 'list-item-'+todoId;\r\n    this.todoFunctions.createListComponents.call(this, todoText, listId);\r\n    todoData.push({\r\n      todoId: listId,\r\n      todoText,\r\n      isCompleted: false\r\n    });\r\n    this.todoFunctions.itemCount.call(this);\r\n    this.todoId+=1;\r\n  },\r\n  completeItem(listId){\r\n    console.log(listId);\r\n    const markComplete = this.todoFunctions.markLiComplete.bind(this, listId);\r\n    markComplete();\r\n    this.todoFunctions.itemCount.call(this);\r\n  },\r\n  editItem(listId){\r\n    this.todoFunctions.updateLi.call(this, listId);\r\n    this.todoFunctions.itemCount.call(this);\r\n  },\r\n  removeItem(listId){\r\n    this.todoFunctions.removeLi.call(this, listId);\r\n    this.todoFunctions.itemCount.call(this);\r\n  },\r\n  clearCompleted(){\r\n    this.todoFunctions.clearCompleted.call(this);\r\n    this.todoFunctions.itemCount.call(this);\r\n  },\r\n  filterAll(){\r\n    this.todoFunctions.filterAll.call(this);\r\n  },\r\n  filterActive(){\r\n    this.todoFunctions.filterActive.call(this);\r\n  },\r\n  filterCompleted(){\r\n    this.todoFunctions.filterCompleted.call(this);\r\n  }\r\n}"]}